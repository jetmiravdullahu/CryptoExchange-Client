/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthDashboardRouteImport } from './routes/_auth/dashboard'
import { Route as AuthDashboardIndexRouteImport } from './routes/_auth/dashboard/index'
import { Route as AuthExchangeConfirmationTransactionIdRouteImport } from './routes/_auth/exchange-confirmation.$transactionId'
import { Route as AuthDashboardUsersRouteImport } from './routes/_auth/dashboard/users'
import { Route as AuthDashboardTransfersRouteImport } from './routes/_auth/dashboard/transfers'
import { Route as AuthDashboardTransactionsRouteImport } from './routes/_auth/dashboard/transactions'
import { Route as AuthDashboardNotificationsRouteImport } from './routes/_auth/dashboard/notifications'
import { Route as AuthDashboardCorrectionsRouteImport } from './routes/_auth/dashboard/corrections'
import { Route as AuthDashboardAccountsRouteImport } from './routes/_auth/dashboard/accounts'
import { Route as AuthDashboardSuperadminRouteImport } from './routes/_auth/dashboard/_superadmin'
import { Route as AuthDashboardLocationsIndexRouteImport } from './routes/_auth/dashboard/locations/index'
import { Route as AuthDashboardAssetsIndexRouteImport } from './routes/_auth/dashboard/assets/index'
import { Route as AuthDashboardSuperadminLocationsLocation_idFeesRouteImport } from './routes/_auth/dashboard/_superadmin/locations/$location_id/fees'
import { Route as AuthDashboardSuperadminAssetsAsset_idExchangeRatesRouteImport } from './routes/_auth/dashboard/_superadmin/assets/$asset_id/exchange-rates'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardIndexRoute = AuthDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthExchangeConfirmationTransactionIdRoute =
  AuthExchangeConfirmationTransactionIdRouteImport.update({
    id: '/exchange-confirmation/$transactionId',
    path: '/exchange-confirmation/$transactionId',
    getParentRoute: () => AuthRoute,
  } as any)
const AuthDashboardUsersRoute = AuthDashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthDashboardTransfersRoute = AuthDashboardTransfersRouteImport.update({
  id: '/transfers',
  path: '/transfers',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthDashboardTransactionsRoute =
  AuthDashboardTransactionsRouteImport.update({
    id: '/transactions',
    path: '/transactions',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardNotificationsRoute =
  AuthDashboardNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardCorrectionsRoute =
  AuthDashboardCorrectionsRouteImport.update({
    id: '/corrections',
    path: '/corrections',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardAccountsRoute = AuthDashboardAccountsRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthDashboardSuperadminRoute = AuthDashboardSuperadminRouteImport.update({
  id: '/_superadmin',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthDashboardLocationsIndexRoute =
  AuthDashboardLocationsIndexRouteImport.update({
    id: '/locations/',
    path: '/locations/',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardAssetsIndexRoute =
  AuthDashboardAssetsIndexRouteImport.update({
    id: '/assets/',
    path: '/assets/',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardSuperadminLocationsLocation_idFeesRoute =
  AuthDashboardSuperadminLocationsLocation_idFeesRouteImport.update({
    id: '/locations/$location_id/fees',
    path: '/locations/$location_id/fees',
    getParentRoute: () => AuthDashboardSuperadminRoute,
  } as any)
const AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute =
  AuthDashboardSuperadminAssetsAsset_idExchangeRatesRouteImport.update({
    id: '/assets/$asset_id/exchange-rates',
    path: '/assets/$asset_id/exchange-rates',
    getParentRoute: () => AuthDashboardSuperadminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthDashboardSuperadminRouteWithChildren
  '/': typeof AuthIndexRoute
  '/dashboard/accounts': typeof AuthDashboardAccountsRoute
  '/dashboard/corrections': typeof AuthDashboardCorrectionsRoute
  '/dashboard/notifications': typeof AuthDashboardNotificationsRoute
  '/dashboard/transactions': typeof AuthDashboardTransactionsRoute
  '/dashboard/transfers': typeof AuthDashboardTransfersRoute
  '/dashboard/users': typeof AuthDashboardUsersRoute
  '/exchange-confirmation/$transactionId': typeof AuthExchangeConfirmationTransactionIdRoute
  '/dashboard/': typeof AuthDashboardIndexRoute
  '/dashboard/assets': typeof AuthDashboardAssetsIndexRoute
  '/dashboard/locations': typeof AuthDashboardLocationsIndexRoute
  '/dashboard/assets/$asset_id/exchange-rates': typeof AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute
  '/dashboard/locations/$location_id/fees': typeof AuthDashboardSuperadminLocationsLocation_idFeesRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof AuthIndexRoute
  '/dashboard': typeof AuthDashboardIndexRoute
  '/dashboard/accounts': typeof AuthDashboardAccountsRoute
  '/dashboard/corrections': typeof AuthDashboardCorrectionsRoute
  '/dashboard/notifications': typeof AuthDashboardNotificationsRoute
  '/dashboard/transactions': typeof AuthDashboardTransactionsRoute
  '/dashboard/transfers': typeof AuthDashboardTransfersRoute
  '/dashboard/users': typeof AuthDashboardUsersRoute
  '/exchange-confirmation/$transactionId': typeof AuthExchangeConfirmationTransactionIdRoute
  '/dashboard/assets': typeof AuthDashboardAssetsIndexRoute
  '/dashboard/locations': typeof AuthDashboardLocationsIndexRoute
  '/dashboard/assets/$asset_id/exchange-rates': typeof AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute
  '/dashboard/locations/$location_id/fees': typeof AuthDashboardSuperadminLocationsLocation_idFeesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/dashboard': typeof AuthDashboardRouteWithChildren
  '/_auth/': typeof AuthIndexRoute
  '/_auth/dashboard/_superadmin': typeof AuthDashboardSuperadminRouteWithChildren
  '/_auth/dashboard/accounts': typeof AuthDashboardAccountsRoute
  '/_auth/dashboard/corrections': typeof AuthDashboardCorrectionsRoute
  '/_auth/dashboard/notifications': typeof AuthDashboardNotificationsRoute
  '/_auth/dashboard/transactions': typeof AuthDashboardTransactionsRoute
  '/_auth/dashboard/transfers': typeof AuthDashboardTransfersRoute
  '/_auth/dashboard/users': typeof AuthDashboardUsersRoute
  '/_auth/exchange-confirmation/$transactionId': typeof AuthExchangeConfirmationTransactionIdRoute
  '/_auth/dashboard/': typeof AuthDashboardIndexRoute
  '/_auth/dashboard/assets/': typeof AuthDashboardAssetsIndexRoute
  '/_auth/dashboard/locations/': typeof AuthDashboardLocationsIndexRoute
  '/_auth/dashboard/_superadmin/assets/$asset_id/exchange-rates': typeof AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute
  '/_auth/dashboard/_superadmin/locations/$location_id/fees': typeof AuthDashboardSuperadminLocationsLocation_idFeesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/dashboard'
    | '/'
    | '/dashboard/accounts'
    | '/dashboard/corrections'
    | '/dashboard/notifications'
    | '/dashboard/transactions'
    | '/dashboard/transfers'
    | '/dashboard/users'
    | '/exchange-confirmation/$transactionId'
    | '/dashboard/'
    | '/dashboard/assets'
    | '/dashboard/locations'
    | '/dashboard/assets/$asset_id/exchange-rates'
    | '/dashboard/locations/$location_id/fees'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/dashboard'
    | '/dashboard/accounts'
    | '/dashboard/corrections'
    | '/dashboard/notifications'
    | '/dashboard/transactions'
    | '/dashboard/transfers'
    | '/dashboard/users'
    | '/exchange-confirmation/$transactionId'
    | '/dashboard/assets'
    | '/dashboard/locations'
    | '/dashboard/assets/$asset_id/exchange-rates'
    | '/dashboard/locations/$location_id/fees'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/_auth/dashboard'
    | '/_auth/'
    | '/_auth/dashboard/_superadmin'
    | '/_auth/dashboard/accounts'
    | '/_auth/dashboard/corrections'
    | '/_auth/dashboard/notifications'
    | '/_auth/dashboard/transactions'
    | '/_auth/dashboard/transfers'
    | '/_auth/dashboard/users'
    | '/_auth/exchange-confirmation/$transactionId'
    | '/_auth/dashboard/'
    | '/_auth/dashboard/assets/'
    | '/_auth/dashboard/locations/'
    | '/_auth/dashboard/_superadmin/assets/$asset_id/exchange-rates'
    | '/_auth/dashboard/_superadmin/locations/$location_id/fees'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard/': {
      id: '/_auth/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthDashboardIndexRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/exchange-confirmation/$transactionId': {
      id: '/_auth/exchange-confirmation/$transactionId'
      path: '/exchange-confirmation/$transactionId'
      fullPath: '/exchange-confirmation/$transactionId'
      preLoaderRoute: typeof AuthExchangeConfirmationTransactionIdRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard/users': {
      id: '/_auth/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof AuthDashboardUsersRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/transfers': {
      id: '/_auth/dashboard/transfers'
      path: '/transfers'
      fullPath: '/dashboard/transfers'
      preLoaderRoute: typeof AuthDashboardTransfersRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/transactions': {
      id: '/_auth/dashboard/transactions'
      path: '/transactions'
      fullPath: '/dashboard/transactions'
      preLoaderRoute: typeof AuthDashboardTransactionsRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/notifications': {
      id: '/_auth/dashboard/notifications'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof AuthDashboardNotificationsRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/corrections': {
      id: '/_auth/dashboard/corrections'
      path: '/corrections'
      fullPath: '/dashboard/corrections'
      preLoaderRoute: typeof AuthDashboardCorrectionsRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/accounts': {
      id: '/_auth/dashboard/accounts'
      path: '/accounts'
      fullPath: '/dashboard/accounts'
      preLoaderRoute: typeof AuthDashboardAccountsRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/_superadmin': {
      id: '/_auth/dashboard/_superadmin'
      path: ''
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardSuperadminRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/locations/': {
      id: '/_auth/dashboard/locations/'
      path: '/locations'
      fullPath: '/dashboard/locations'
      preLoaderRoute: typeof AuthDashboardLocationsIndexRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/assets/': {
      id: '/_auth/dashboard/assets/'
      path: '/assets'
      fullPath: '/dashboard/assets'
      preLoaderRoute: typeof AuthDashboardAssetsIndexRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/_superadmin/locations/$location_id/fees': {
      id: '/_auth/dashboard/_superadmin/locations/$location_id/fees'
      path: '/locations/$location_id/fees'
      fullPath: '/dashboard/locations/$location_id/fees'
      preLoaderRoute: typeof AuthDashboardSuperadminLocationsLocation_idFeesRouteImport
      parentRoute: typeof AuthDashboardSuperadminRoute
    }
    '/_auth/dashboard/_superadmin/assets/$asset_id/exchange-rates': {
      id: '/_auth/dashboard/_superadmin/assets/$asset_id/exchange-rates'
      path: '/assets/$asset_id/exchange-rates'
      fullPath: '/dashboard/assets/$asset_id/exchange-rates'
      preLoaderRoute: typeof AuthDashboardSuperadminAssetsAsset_idExchangeRatesRouteImport
      parentRoute: typeof AuthDashboardSuperadminRoute
    }
  }
}

interface AuthDashboardSuperadminRouteChildren {
  AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute: typeof AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute
  AuthDashboardSuperadminLocationsLocation_idFeesRoute: typeof AuthDashboardSuperadminLocationsLocation_idFeesRoute
}

const AuthDashboardSuperadminRouteChildren: AuthDashboardSuperadminRouteChildren =
  {
    AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute:
      AuthDashboardSuperadminAssetsAsset_idExchangeRatesRoute,
    AuthDashboardSuperadminLocationsLocation_idFeesRoute:
      AuthDashboardSuperadminLocationsLocation_idFeesRoute,
  }

const AuthDashboardSuperadminRouteWithChildren =
  AuthDashboardSuperadminRoute._addFileChildren(
    AuthDashboardSuperadminRouteChildren,
  )

interface AuthDashboardRouteChildren {
  AuthDashboardSuperadminRoute: typeof AuthDashboardSuperadminRouteWithChildren
  AuthDashboardAccountsRoute: typeof AuthDashboardAccountsRoute
  AuthDashboardCorrectionsRoute: typeof AuthDashboardCorrectionsRoute
  AuthDashboardNotificationsRoute: typeof AuthDashboardNotificationsRoute
  AuthDashboardTransactionsRoute: typeof AuthDashboardTransactionsRoute
  AuthDashboardTransfersRoute: typeof AuthDashboardTransfersRoute
  AuthDashboardUsersRoute: typeof AuthDashboardUsersRoute
  AuthDashboardIndexRoute: typeof AuthDashboardIndexRoute
  AuthDashboardAssetsIndexRoute: typeof AuthDashboardAssetsIndexRoute
  AuthDashboardLocationsIndexRoute: typeof AuthDashboardLocationsIndexRoute
}

const AuthDashboardRouteChildren: AuthDashboardRouteChildren = {
  AuthDashboardSuperadminRoute: AuthDashboardSuperadminRouteWithChildren,
  AuthDashboardAccountsRoute: AuthDashboardAccountsRoute,
  AuthDashboardCorrectionsRoute: AuthDashboardCorrectionsRoute,
  AuthDashboardNotificationsRoute: AuthDashboardNotificationsRoute,
  AuthDashboardTransactionsRoute: AuthDashboardTransactionsRoute,
  AuthDashboardTransfersRoute: AuthDashboardTransfersRoute,
  AuthDashboardUsersRoute: AuthDashboardUsersRoute,
  AuthDashboardIndexRoute: AuthDashboardIndexRoute,
  AuthDashboardAssetsIndexRoute: AuthDashboardAssetsIndexRoute,
  AuthDashboardLocationsIndexRoute: AuthDashboardLocationsIndexRoute,
}

const AuthDashboardRouteWithChildren = AuthDashboardRoute._addFileChildren(
  AuthDashboardRouteChildren,
)

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
  AuthExchangeConfirmationTransactionIdRoute: typeof AuthExchangeConfirmationTransactionIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
  AuthExchangeConfirmationTransactionIdRoute:
    AuthExchangeConfirmationTransactionIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
